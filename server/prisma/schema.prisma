// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

//Cadastra os hábitos
model Habit {
  id         String          @id @default(uuid()) //uuid é um id unico universal | @id transforma essa coluna em chave primária
  title      String
  created_at DateTime
  dayHabits  DayHabit[]
  weekDays   HabitWeekDays[]

  @@map("habits") //para ele criar o nome da tabela desse jeito que declaramos aqui
}

model User {
  id String @id @default(uuid())

  name       String
  email      String   @unique
  avatar     String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
}

model HabitWeekDays {
  id       String @id @default(uuid())
  habit_id String
  week_day Int

  habit Habit @relation(fields: [habit_id], references: [id])

  @@unique([habit_id, week_day]) //não permitir ter o mesmo hábito no msm dia da semana
  @@map("habit_week_days")
}

//Cadastra os dias 
model Day {
  id   String   @id @default(uuid())
  date DateTime

  dayHabits DayHabit[]

  @@unique([date]) //isso diz que podemos ter apenas um dia de tal data
  @@map("days")
}

//Conecta os dias com os hábitos (cria uma relação N pra N)
model DayHabit {
  id String @id @default(uuid())

  day_id   String
  habit_id String

  //Relacionamentos (chave estrangeira)
  day   Day   @relation(fields: [day_id], references: [id])
  habit Habit @relation(fields: [habit_id], references: [id])

  @@unique([day_id, habit_id])
  @@map("day_habits")
}
